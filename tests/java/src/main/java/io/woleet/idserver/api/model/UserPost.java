/*
 * Woleet.ID Server
 * This is Woleet.ID Server API documentation.
 *
 * OpenAPI spec version: 1.2.0
 * Contact: contact@woleet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.woleet.idserver.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.woleet.idserver.api.model.FullIdentity;
<<<<<<< HEAD
import io.woleet.idserver.api.model.UserModeEnum;
import io.woleet.idserver.api.model.UserPut;
=======
import io.woleet.idserver.api.model.UserBase;
>>>>>>> master
import io.woleet.idserver.api.model.UserRoleEnum;
import io.woleet.idserver.api.model.UserStatusEnum;
import java.io.IOException;
import java.util.UUID;

/**
 * UserPost
 */

public class UserPost extends UserBase {
  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_CREATE_DEFAULT_KEY = "createDefaultKey";
  @SerializedName(SERIALIZED_NAME_CREATE_DEFAULT_KEY)
  private Boolean createDefaultKey;

<<<<<<< HEAD
  public static final String SERIALIZED_NAME_MODE = "mode";
  @SerializedName(SERIALIZED_NAME_MODE)
  private UserModeEnum mode = null;
=======
  public UserPost password(String password) {
    this.password = password;
    return this;
  }

   /**
   * User password.
   * @return password
  **/
  @ApiModelProperty(example = "nSBa+rV3%2/LpD", value = "User password.")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }
>>>>>>> master

  public UserPost createDefaultKey(Boolean createDefaultKey) {
    this.createDefaultKey = createDefaultKey;
    return this;
  }

   /**
   * If true create a key holded by the server when this user is created.
   * @return createDefaultKey
  **/
  @ApiModelProperty(required = true, value = "If true create a key holded by the server when this user is created.")
  public Boolean getCreateDefaultKey() {
    return createDefaultKey;
  }

  public void setCreateDefaultKey(Boolean createDefaultKey) {
    this.createDefaultKey = createDefaultKey;
  }

  public UserPost mode(UserModeEnum mode) {
    this.mode = mode;
    return this;
  }

   /**
   * Get mode
   * @return mode
  **/
  @ApiModelProperty(value = "")
  public UserModeEnum getMode() {
    return mode;
  }

  public void setMode(UserModeEnum mode) {
    this.mode = mode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserPost userPost = (UserPost) o;
<<<<<<< HEAD
    return Objects.equals(this.createDefaultKey, userPost.createDefaultKey) &&
        Objects.equals(this.mode, userPost.mode) &&
=======
    return Objects.equals(this.password, userPost.password) &&
        Objects.equals(this.createDefaultKey, userPost.createDefaultKey) &&
>>>>>>> master
        super.equals(o);
  }

  @Override
  public int hashCode() {
<<<<<<< HEAD
    return Objects.hash(createDefaultKey, mode, super.hashCode());
=======
    return Objects.hash(password, createDefaultKey, super.hashCode());
>>>>>>> master
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserPost {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    createDefaultKey: ").append(toIndentedString(createDefaultKey)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

