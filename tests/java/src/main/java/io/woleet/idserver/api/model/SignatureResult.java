/*
 * Woleet.ID Server
 * This is Woleet.ID Server API documentation.
 *
 * The version of the OpenAPI document: 1.2.5
 * Contact: contact@woleet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.woleet.idserver.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SignatureResult
 */

public class SignatureResult {
  public static final String SERIALIZED_NAME_PUB_KEY = "pubKey";
  @SerializedName(SERIALIZED_NAME_PUB_KEY)
  private String pubKey;

  public static final String SERIALIZED_NAME_SIGNED_HASH = "signedHash";
  @SerializedName(SERIALIZED_NAME_SIGNED_HASH)
  private String signedHash;

  public static final String SERIALIZED_NAME_SIGNED_MESSAGE = "signedMessage";
  @SerializedName(SERIALIZED_NAME_SIGNED_MESSAGE)
  private String signedMessage;

  public static final String SERIALIZED_NAME_SIGNATURE = "signature";
  @SerializedName(SERIALIZED_NAME_SIGNATURE)
  private String signature;

  public static final String SERIALIZED_NAME_IDENTITY_U_R_L = "identityURL";
  @SerializedName(SERIALIZED_NAME_IDENTITY_U_R_L)
  private String identityURL;

  public static final String SERIALIZED_NAME_SIGNED_IDENTITY = "signedIdentity";
  @SerializedName(SERIALIZED_NAME_SIGNED_IDENTITY)
  private String signedIdentity;

  public static final String SERIALIZED_NAME_SIGNED_ISSUER_DOMAIN = "signedIssuerDomain";
  @SerializedName(SERIALIZED_NAME_SIGNED_ISSUER_DOMAIN)
  private String signedIssuerDomain;


  public SignatureResult pubKey(String pubKey) {
    
    this.pubKey = pubKey;
    return this;
  }

   /**
   * Public key used to sign (must be the same as the &#x60;pubKey&#x60; parameter if provided).
   * @return pubKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1KjQ8LgUgYVSqeK7JFhA9W8FVsHCzFrFi8", value = "Public key used to sign (must be the same as the `pubKey` parameter if provided).")

  public String getPubKey() {
    return pubKey;
  }


  public void setPubKey(String pubKey) {
    this.pubKey = pubKey;
  }


  public SignatureResult signedHash(String signedHash) {
    
    this.signedHash = signedHash;
    return this;
  }

   /**
   * SHA256 hash that is signed (same as the &#x60;hashToSign&#x60; parameter).
   * @return signedHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b", value = "SHA256 hash that is signed (same as the `hashToSign` parameter).")

  public String getSignedHash() {
    return signedHash;
  }


  public void setSignedHash(String signedHash) {
    this.signedHash = signedHash;
  }


  public SignatureResult signedMessage(String signedMessage) {
    
    this.signedMessage = signedMessage;
    return this;
  }

   /**
   * Message that is signed (same as the &#x60;messageToSign&#x60; parameter).
   * @return signedMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Love is the message!", value = "Message that is signed (same as the `messageToSign` parameter).")

  public String getSignedMessage() {
    return signedMessage;
  }


  public void setSignedMessage(String signedMessage) {
    this.signedMessage = signedMessage;
  }


  public SignatureResult signature(String signature) {
    
    this.signature = signature;
    return this;
  }

   /**
   * Signature of &#x60;signedMessage&#x60; or &#x60;signedHash&#x60; using the public key &#x60;pubKey&#x60;, or signature of SHA256(&#x60;signedMessage&#x60; or &#x60;signedHash&#x60; + &#x60;signedIdentity&#x60; + &#x60;signedIssuerDomain&#x60;) if the identity of the signer and the domain of the identity issuer are included to the signed data. 
   * @return signature
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "IKnOvW2/BQqahssC2l9Icz7qiJQqesgu0HCKvW/L5xZLaMCLyg19ATDNJojMILdUijFOqiRzgk6ieDXi89DeB0Q=", value = "Signature of `signedMessage` or `signedHash` using the public key `pubKey`, or signature of SHA256(`signedMessage` or `signedHash` + `signedIdentity` + `signedIssuerDomain`) if the identity of the signer and the domain of the identity issuer are included to the signed data. ")

  public String getSignature() {
    return signature;
  }


  public void setSignature(String signature) {
    this.signature = signature;
  }


  public SignatureResult identityURL(String identityURL) {
    
    this.identityURL = identityURL;
    return this;
  }

   /**
   * Public URL of the **Identity endpoint** (ie. the URL that anyone can use to get the identity associated to a public key). 
   * @return identityURL
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://identity.mydomain.com/identity", value = "Public URL of the **Identity endpoint** (ie. the URL that anyone can use to get the identity associated to a public key). ")

  public String getIdentityURL() {
    return identityURL;
  }


  public void setIdentityURL(String identityURL) {
    this.identityURL = identityURL;
  }


  public SignatureResult signedIdentity(String signedIdentity) {
    
    this.signedIdentity = signedIdentity;
    return this;
  }

   /**
   * X500 Distinguished Name representing the identity of the signer.&lt;br&gt; Returned only if &#x60;identityToSign&#x60; is used. 
   * @return signedIdentity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CN=John Doe,EMAILADDRESS=john.doe@acme.com,O=Acme corp,OU=Sales dept", value = "X500 Distinguished Name representing the identity of the signer.<br> Returned only if `identityToSign` is used. ")

  public String getSignedIdentity() {
    return signedIdentity;
  }


  public void setSignedIdentity(String signedIdentity) {
    this.signedIdentity = signedIdentity;
  }


  public SignatureResult signedIssuerDomain(String signedIssuerDomain) {
    
    this.signedIssuerDomain = signedIssuerDomain;
    return this;
  }

   /**
   * Domain of the identity issuer (ie. of the organization who verified the identity).&lt;br&gt; Returned only if &#x60;identityToSign&#x60; is used. 
   * @return signedIssuerDomain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "acme.com", value = "Domain of the identity issuer (ie. of the organization who verified the identity).<br> Returned only if `identityToSign` is used. ")

  public String getSignedIssuerDomain() {
    return signedIssuerDomain;
  }


  public void setSignedIssuerDomain(String signedIssuerDomain) {
    this.signedIssuerDomain = signedIssuerDomain;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SignatureResult signatureResult = (SignatureResult) o;
    return Objects.equals(this.pubKey, signatureResult.pubKey) &&
        Objects.equals(this.signedHash, signatureResult.signedHash) &&
        Objects.equals(this.signedMessage, signatureResult.signedMessage) &&
        Objects.equals(this.signature, signatureResult.signature) &&
        Objects.equals(this.identityURL, signatureResult.identityURL) &&
        Objects.equals(this.signedIdentity, signatureResult.signedIdentity) &&
        Objects.equals(this.signedIssuerDomain, signatureResult.signedIssuerDomain);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pubKey, signedHash, signedMessage, signature, identityURL, signedIdentity, signedIssuerDomain);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SignatureResult {\n");
    sb.append("    pubKey: ").append(toIndentedString(pubKey)).append("\n");
    sb.append("    signedHash: ").append(toIndentedString(signedHash)).append("\n");
    sb.append("    signedMessage: ").append(toIndentedString(signedMessage)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("    identityURL: ").append(toIndentedString(identityURL)).append("\n");
    sb.append("    signedIdentity: ").append(toIndentedString(signedIdentity)).append("\n");
    sb.append("    signedIssuerDomain: ").append(toIndentedString(signedIssuerDomain)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

