#
# Serve client files and proxy server API endpoints
#

server {
  listen 4220 ssl http2 default_server;
  listen [::]:4220 http2 ssl;

  resolver ${WOLEET_ID_SERVER_NGINX_RESOLVER};

  server_name localhost;
  root /usr/share/nginx/html;

  # SSL configuration
  include rules/ssl.conf;

  # Set the max upload size to 4MB
  client_max_body_size 4M;

  # Proxy all /api calls to WIDS server API
  set $proxy_target ${WOLEET_ID_SERVER_NGINX_SERVER_ADDRESS}:3000;
  location ^~ /api/ {
    access_log on;
    rewrite ^/api/(.*) /$1 break;
    include rules/proxy.conf;
  }

  # Proxy all /oidcp calls to WIDS oidcp API
  location ^~ /oidcp/ {
    access_log on;
    proxy_http_version 1.1;
    proxy_hide_header X-Powered-By;
    proxy_hide_header WWW-Authenticate;

    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Host $host:$server_port;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_redirect off;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;

    proxy_pass http://${WOLEET_ID_SERVER_NGINX_SERVER_ADDRESS}:3003/oidcp/;
  }

  location = /.well-known/openid-configuration {
    access_log on;
    proxy_http_version 1.1;
    proxy_hide_header X-Powered-By;
    proxy_hide_header WWW-Authenticate;

    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Host $host:$server_port;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_redirect off;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;

    proxy_pass http://${WOLEET_ID_SERVER_NGINX_SERVER_ADDRESS}:3003/oidcp/.well-known/openid-configuration;
  }

  # Map base path to index.html and force re-validation
  location / {
    access_log on;
    try_files /index.html =404;
    add_header Cache-Control 'must-revalidate, proxy-revalidate, max-age=0';
  }

  # Force re-validation of all files having an extension (especially useful for .html, .css and .js files)
  location ~* ^.+\..*$ {
    access_log on;
    add_header Cache-Control 'must-revalidate, proxy-revalidate, max-age=0';
  }

  include rules/handle497.conf;
  include rules/handle500.conf;
}
